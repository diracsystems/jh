{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
       initContainers:
        - name: init-ds
          image: busybox:latest
          command:
            - '/bin/sh'
            - '-c'
            - |
                while true
                do
                  rt=$(nc -z -w 1 jh-mysql 3306)
                  if [ $? -eq 0 ]; then
                    echo "DB is UP"
                    break
                  fi
                  echo "DB is not yet reachable;sleep for 10s before retry"
                  sleep 10
                done
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: prod
        - name: JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET
          value: TnpnME4yWXpNVE5tTnpjNFlUWTFaams1WkRRME5qRTJZV0kwTUdGaU9EYzFZbVE1TURnM09EUXpZMlU0WkRKak56TTBObVl6T0RrMFpERXhNakpsWkRBNE1qWTNOVFE0TVdRNE5qRmxZVFF4TXpGbE56UTJOalExTnpGbU9EbGlPRGxtTnc9PQ==
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://jh-mysql.jx-staging.svc.cluster.local:3306/jh?useUnicode=true&characterEncoding=utf8&useSSL=false
        - name: JAVA_OPTS
          value: " -Xmx256m -Xms256m"
        ports:
        - containerPort: {{ .Values.service.appPort }}
        - containerPort: {{ .Values.service.adminPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.adminPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.adminPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
{{- end }}
